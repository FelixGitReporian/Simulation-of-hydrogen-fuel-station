import numpy as np
import random


# aus Bedarfsermittlung:
#autos_qkm_tag_genutzt, n_fahrten_tag, s_fahrt, tagesverteilung = Berechnung()
autos_qkm_tag_genutzt = np.array([163.0, 79.0, 33.0])
n_fahrten = np.array([3.0, 3.4, 3.1])
s_fahrt = np.array([20.766, 23.96023529, 27.6359871])
tagesverteilung = np.array([[0.11, 0.12, 0.13],
                            [0.13, 0.12, 0.12],
                            [0.21, 0.2,  0.2],
                            [0.22, 0.22, 0.22],
                            [0.23, 0.23, 0.22],
                            [0.08, 0.08, 0.08],
                            [0.03, 0.02, 0.02]])


##########
#Umrechnungen der Tagesverteilung
#########


Uhrzeiten_端bergang_liste = []
Uhrzeiten_orig = [8, 10, 13, 16, 19, 22, 5]
for k in range(len(Uhrzeiten_orig)-1):
    Uhrzeiten_端bergang_liste.append(Uhrzeiten_orig[k+1]-Uhrzeiten_orig[k])
#print(minus)
Uhrzeiten_端bergang_liste[6] = 7 #von 22 Uhr bis 5 Uhr sind es 7 Stunden nicht -17
Stunden = np.array(Uhrzeiten_端bergang_liste)
new_tagesverteilung = tagesverteilung.T/Stunden
Tagesordnung = []
for i in range(3):
    for k in range(7):
        Tagesordnung.append([new_tagesverteilung[i][k]]*Stunden[k])
tagesverteilung_regionen_in_stunden = np.array([
[0.004285714285714286, 0.004285714285714286, 0.004285714285714286, 0.004285714285714286, 0.004285714285714286,
0.03666666666666667, 0.03666666666666667, 0.03666666666666667, 0.065, 0.065, 0.06999999999999999,
0.06999999999999999, 0.06999999999999999, 0.07333333333333333, 0.07333333333333333, 0.07333333333333333,
0.07666666666666667, 0.07666666666666667, 0.07666666666666667, 0.02666666666666667, 0.02666666666666667,
0.02666666666666667, 0.004285714285714286, 0.004285714285714286],
[0.002857142857142857, 0.002857142857142857, 0.002857142857142857, 0.002857142857142857, 0.002857142857142857,
0.04, 0.04, 0.04, 0.06, 0.06, 0.06666666666666667, 0.06666666666666667, 0.06666666666666667, 0.07333333333333333,
0.07333333333333333, 0.07333333333333333, 0.07666666666666667, 0.07666666666666667, 0.07666666666666667,
0.02666666666666667, 0.02666666666666667, 0.02666666666666667, 0.002857142857142857, 0.002857142857142857],
[0.002857142857142857, 0.002857142857142857, 0.002857142857142857, 0.002857142857142857, 0.002857142857142857,
0.043333333333333335, 0.043333333333333335, 0.043333333333333335, 0.06, 0.06, 0.06666666666666667,
0.06666666666666667, 0.06666666666666667, 0.07333333333333333, 0.07333333333333333, 0.07333333333333333,
0.07333333333333333, 0.07333333333333333, 0.07333333333333333, 0.02666666666666667, 0.02666666666666667,
0.02666666666666667, 0.002857142857142857, 0.002857142857142857]])